{"version":3,"sources":["redux/pokemonList/pokemonListTypes.js","redux/pokemonList/pokemonListReducer.js","redux/pokemonCards/pokemonCardsTypes.js","redux/pokemonCards/pokemonCardsReducer.js","redux/pokemonPage/pokemonPageTypes.js","redux/pokemonPage/pokemonPageReducer.js","redux/typeFilteredList/typeFilteredListTypes.js","redux/typeFilteredList/typeFilteredListReducer.js","redux/NavigationSm/NavigationSmTypes.js","redux/NavigationSm/NavigationSmReducer.js","redux/rootReducer.js","redux/store.js","components/ErrorBoundary/index.js","components/ErrorBoundary/ErrorBoundary.js","service/pokemonService.js","redux/pokemonList/pokemonListActions.js","components/HomePage/Search/index.js","components/HomePage/Search/Search.js","components/NavBurger/index.js","components/NavBurger/NavBurger.js","redux/NavigationSm/NavigationSmActions.js","components/Navigation/index.js","components/Navigation/Navigation.js","components/customHooks/useDocumentTitle.js","components/customHooks/useNavigationSm.js","components/AdditionalPage/index.js","components/AdditionalPage/AdditionalPage.js","components/MainHeadline/index.js","components/MainHeadline/MainHeadline.js","components/Spinner/5IPv.gif","components/Spinner/5Q0v.gif","components/Spinner/Spinner.js","components/Spinner/index.js","components/PokemonList/index.js","components/PokemonList/PokemonList.js","components/HomePage/SearchList/SearchList.js","components/HomePage/SearchList/index.js","redux/pokemonCards/pokemonCardsActions.js","components/SpinnerSm/index.js","components/SpinnerSm/SpinnerSm.js","components/HomePage/LoadMoreButton/LoadMoreButton.js","components/HomePage/Card/Card.js","components/HomePage/Card/index.js","components/HomePage/PokemonCards/index.js","components/HomePage/PokemonCards/PokemonCards.js","components/HomePage/index.js","components/HomePage/HomePage.js","components/customHooks/useNoData.js","components/PokemonPage/Stats/Stats.js","components/PokemonPage/Stats/index.js","components/PokemonPage/Evolution/Evolution.js","components/PokemonPage/Evolution/index.js","components/PokemonPage/Detail-main/Description/index.js","components/PokemonPage/Detail-main/Description/Description.js","components/PokemonPage/Detail-main/Weight/index.js","components/PokemonPage/Detail-main/Weight/Weight.js","components/PokemonPage/Detail-main/Height/index.js","components/PokemonPage/Detail-main/Height/Height.js","components/PokemonPage/Detail-main/Gender/Gender.js","components/PokemonPage/Detail-main/Gender/index.js","components/PokemonPage/Detail-main/Abilities/Abilities.js","components/PokemonPage/Detail-main/Abilities/index.js","components/PokemonPage/Detail-main/Category/index.js","components/PokemonPage/Detail-main/Category/Category.js","components/PokemonPage/Detail-main/Habitat/index.js","components/PokemonPage/Detail-main/Habitat/Habitat.js","components/PokemonPage/Detail-main/index.js","components/PokemonPage/Detail-main/Detail-main.js","components/PokemonPage/Detail-types/TypeItem/index.js","components/PokemonPage/Detail-types/TypeItem/TypeItem.js","components/PokemonPage/Detail-types/Weaknesses/index.js","components/PokemonPage/Detail-types/Weaknesses/Weaknesses.js","components/PokemonPage/Detail-types/Strengths/index.js","components/PokemonPage/Detail-types/Strengths/Strengths.js","components/PokemonPage/Detail-types/Type/index.js","components/PokemonPage/Detail-types/Type/Type.js","redux/typeFilteredList/typeFilteredListActions.js","components/PokemonPage/Detail-types/FilteredTypes/index.js","components/PokemonPage/Detail-types/FilteredTypes/FilteredTypes.js","components/PokemonPage/Detail-types/index.js","components/PokemonPage/Detail-types/Detail-types.js","components/404/index.js","components/404/404.js","redux/pokemonPage/pokemonPageActions.js","components/PokemonPage/index.js","components/PokemonPage/PokemonPage.js","components/App/index.js","components/App/App.js","index.js"],"names":["POKEMON_LIST_LOADING","POKEMON_LIST_SUCCESS","POKEMON_LIST_FAILURE","POKEMON_LIST_SEARCH","CLEAN_SEARCH","initialState","pokemonList","pokemonListLoading","pokemonListError","pokemonListSearch","pokemonListCache","pokemonListReducer","state","action","type","payload","POKEMON_CARDS_SUCCESS","POKEMON_CARDS_FAILURE","GET_MORE_CARDS","pokemonCards","pokemonCardsLoading","pokemonCardsError","pokemonCardsCache","loadMore","status","limit","offset","maxData","pokemonCardsReducer","POKEMON_PAGE_LOADING","POKEMON_PAGE_SUCCESS","POKEMON_PAGE_FAILURE","pokemonPage","pokemonPageLoading","pokemonPageError","pokemonPageReducer","TYPE_FILTERED_LIST_LOADING","TYPE_FILTERED_LIST_SUCCESS","TYPE_FILTERED_LIST_FAILURE","typeFilteredList","typeFilteredListLoading","typeFilteredListError","typeFilteredListReducer","TOGGLE_MENU","HIDE_MENU","showMenu","NavigationSmReducer","rootReducer","combineReducers","navigationSm","navigationSmReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ErrorBoundary","error","this","setState","props","children","Component","PokemonService","apiBase","getResource","url","a","fetch","result","ok","Error","json","getMorePokemons","results","Promise","allSettled","map","dataResponse","dataSuccess","filter","resp","value","item","all","data","dataArray","pokemon","name","_isDataAvailable","image","sprites","other","id","getAllPokemons","index","getCurrentPokemon","pokemonName","abilities","height","weight","species","stats","types","getPokemonAbilities","pokemonAbilities","getPokemonCategory","category","getPokemonHabitat","habitat","getPokemonWeaknesses","weaknesses","getPokemonStrengths","strengths","getPokemonGender","gender","getPokemonEvolution","evolution","getPokemonDescription","description","getPokemonImage","pokemonTypes","getPokemonTypes","pokemonStats","getPokemonStats","pokemonDescriptionResponse","pokemonDescriptionResult","find","language","replace","speciesResponse","speciesResult","pokemonEvolutionResponse","pokemonEvolutionResult","evolutionChain","obj","currentObj","recursive","key","push","getChain","chain","getImages","evolutionMatchedArrays","stat","pokemonStrengthsResponse","pokemonStrengthsResult","Set","forEach","add","pokemonWeaknessesResponse","pokemonWeaknessesResult","pokemonCategoryResponse","pokemonCategoryResult","genera","genus","pokemonHabitatResponse","pokemonHabitatResult","abilitiesToShow","ability","pokemonAbilitiesResponse","pokemonAbilitiesResult","transformAbilityName","transformedName","split","join","toUpperCase","slice","text","genderUrls","pokemonGenderResponse","pokemonGenderResult","genderData","genderItem","getFilteredTypes","typeResponse","service","getPokemonList","dispatch","Search","sm","search","useRef","useDispatch","useSelector","useEffect","current","focus","className","ref","onChange","e","searchValue","target","toLocaleLowerCase","placeholder","to","pathname","aria-label","viewBox","transform","d","points","NavBurger","burger","onClick","Navigation","document","body","classList","remove","exact","useDocumentTitle","title","useNavigationSm","window","matchMedia","matches","AdditionalPage","MainHeadline","headline","home","Spinner","spinner","setRandomSpinner","useCallback","min","max","images","Pokemon1","Pokemon2","length","Math","floor","random","src","alt","PokemonList","pokemons","FilterFail","SearchList","includes","getPokemonCards","SpinnerSm","show","LoadMoreButton","nodata","Card","PokemonCards","HomePage","Nodata","useNoData","setChart","labels","Object","keys","values","chartOptions","options","noData","plotOptions","bar","horizontal","series","width","Stats","View","Evolution","Description","Weight","Height","Gender","Abilities","Category","Habitat","DetailMain","TypeItem","useRouteMatch","Weaknesses","Strengths","Type","getTypeFilteredList","FilteredTypes","useParams","DetailTypes","useLocation","URLSearchParams","get","NonExistentPage","backButton","goBack","useHistory","getPokemonPage","PokemonPage","App","component","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"uqBAAaA,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAuB,sBACvBC,EAAuB,eCF9BC,EAAe,CACjBC,YAAa,GACbC,oBAAoB,EACpBC,kBAAkB,EAClBC,kBAAmB,GACnBC,kBAAkB,GAsBPC,EAnBY,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACjDC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACJ,KAAKd,EACD,OAAO,2BAAKY,GAAZ,IAAmBL,oBAAoB,EAAMC,kBAAkB,IACnE,KAAKP,EACD,OAAO,2BAAKW,GAAZ,IAAmBL,oBAAoB,EAAOC,kBAAkB,EAAOE,kBAAkB,EAAMJ,YAAaS,IAChH,KAAKb,EACD,OAAO,2BAAKU,GAAZ,IAAmBL,oBAAoB,EAAOC,kBAAkB,IACpE,KAAKL,EACD,OAAO,2BAAKS,GAAZ,IAAmBH,kBAAmBM,IAC1C,KAAKX,EACD,OAAO,2BAAKQ,GAAZ,IAAmBH,kBAAmB,KAC1C,QACI,OAAOG,I,QCzBNI,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAwB,iBCA/Bb,EAAe,CACjBc,aAAc,GACdC,qBAAqB,EACrBC,mBAAmB,EACnBC,mBAAmB,EACnBC,SAAU,CACNC,QAAQ,EACRC,MAAO,GACPC,OAAQ,EACRC,QAAS,OA+CFC,EA3Ca,WAAmC,IAAlChB,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAClDC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACJ,KAAKE,EACD,OAAO,2BACAJ,GADP,IAEIQ,qBAAqB,EACrBC,mBAAmB,EACnBC,mBAAmB,EACnBH,aAAa,GAAD,mBAAOP,EAAMO,cAAb,YAA8BJ,IAC1CQ,SAAS,2BACFX,EAAMW,UADL,IAEJC,QAAQ,MAGpB,KAAKP,EACD,OAAO,2BACAL,GADP,IAEIQ,qBAAqB,EACrBC,mBAAmB,EACnBE,SAAS,2BACFX,EAAMW,UADL,IAEJC,QAAQ,MAGpB,KAAKN,EACD,OAAO,2BACAN,GADP,IAEIU,mBAAmB,EACnBC,SAAS,2BACFX,EAAMW,UADL,IAEJC,QAAQ,EACRE,OAAQd,EAAMW,SAASG,OAAS,OAG5C,QACI,OAAOd,ICpDbiB,EAAuB,uBACvBC,EAAuB,uBACvBC,EAAuB,uBCAvB1B,EAAe,CACjB2B,YAAa,GACbC,oBAAoB,EACpBC,kBAAkB,GAkBPC,EAfY,WAAmC,IAAlCvB,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACjDC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACJ,KAAKe,EACD,OAAO,2BAAKjB,GAAZ,IAAmBqB,oBAAoB,EAAMC,kBAAkB,IACnE,KAAKJ,EACD,OAAO,2BAAKlB,GAAZ,IAAmBqB,oBAAoB,EAAOC,kBAAkB,EAAOF,YAAajB,IACxF,KAAKgB,EACD,OAAO,2BAAKnB,GAAZ,IAAmBqB,oBAAoB,EAAOC,kBAAkB,IACpE,QACI,OAAOtB,ICnBbwB,EAA6B,6BAC7BC,EAA6B,6BAC7BC,EAA6B,6BCA7BjC,EAAe,CACjBkC,iBAAkB,GAClBC,yBAAyB,EACzBC,uBAAuB,GAkBZC,EAfiB,WAAmC,IAAlC9B,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACtDC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACJ,KAAKsB,EACD,OAAO,2BAAKxB,GAAZ,IAAmB4B,yBAAyB,EAAMC,uBAAuB,IAC7E,KAAKJ,EACD,OAAO,2BAAKzB,GAAZ,IAAmB4B,yBAAyB,EAAOC,uBAAuB,EAAOF,iBAAkBxB,IACvG,KAAKuB,EACD,OAAO,2BAAK1B,GAAZ,IAAmB4B,yBAAyB,EAAOC,uBAAuB,IAC9E,QACI,OAAO7B,ICnBN+B,EAAc,cACdC,EAAY,YCCnBvC,EAAe,CACjBwC,UAAU,GAgBCC,EAba,WAAmC,IAAlClC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAClDC,EAASD,EAATC,KAER,OAAOA,GACH,KAAK6B,EACD,OAAO,2BAAK/B,GAAZ,IAAmBiC,UAAWjC,EAAMiC,WACxC,KAAKD,EACD,OAAO,2BAAKhC,GAAZ,IAAmBiC,UAAU,IACjC,QACI,OAAOjC,ICAJmC,EARKC,0BAAgB,CAChC1C,YAAaK,EACbQ,aAAcS,EACdI,YAAaG,EACbI,iBAAkBG,EAClBO,aAAcC,ICLHC,EAFDC,sBAAYL,EAAaM,8BAAoBC,0BAAgBC,O,gCCJ5DC,E,4MCEX5C,MAAQ,CACJ6C,OAAO,G,kEAIPC,KAAKC,SAAS,CAAEF,OAAO,M,+BAIvB,OAAIC,KAAK9C,MAAM6C,MACJ,sDAGJC,KAAKE,MAAMC,a,GAdiBC,a,sCCFtBC,E,iDACjBC,QAAU,6B,KAEVC,Y,uCAAc,WAAOC,GAAP,eAAAC,EAAA,sEACWC,MAAM,GAAD,OAAI,EAAKJ,SAAT,OAAmBE,IADnC,WACJG,EADI,QAGEC,GAHF,sBAIA,IAAIC,MAAJ,0BAA6B,EAAKP,SAAlC,OAA4CE,IAJ5C,uBAOGG,EAAOG,OAPV,mF,2DAUdC,gB,uCAAkB,WAAOhD,EAAOC,GAAd,uBAAAyC,EAAA,sEACY,EAAKF,YAAL,yBAAmCxC,EAAnC,mBAAmDC,IAD/D,uBACNgD,EADM,EACNA,QADM,SAGaC,QAAQC,WAAWF,EAAQG,KAAI,gBAAGX,EAAH,EAAGA,IAAH,OAAaE,MAAMF,OAH/D,cAGRY,EAHQ,OAIRC,EAAcD,EAAaE,QAAO,SAAAC,GAAI,MAAoB,cAAhBA,EAAKzD,QAA0ByD,EAAKC,MAAMZ,MAAIO,KAAI,SAAAM,GAAI,OAAIA,EAAKD,SAJjG,UAKUP,QAAQS,IAAIL,EAAYF,KAAI,SAAAQ,GAAI,OAAIA,EAAKb,WALnD,eAKRc,EALQ,yBAQPA,EAAUT,KAAI,SAAAU,GAAY,IAAD,MAC5B,MAAO,CACHC,KAAM,EAAKC,iBAAiBF,EAAQC,MACpCE,MAAO,EAAKD,iBAAL,UAAsBF,EAAQI,eAA9B,iBAAsB,EAAiBC,aAAvC,iBAAsB,EAAyB,2BAA/C,aAAsB,iBAC7BC,GAAI,EAAKJ,iBAAiBF,EAAQM,SAZ5B,4C,6DAiBlBC,e,sBAAiB,8BAAA3B,EAAA,sEACa,EAAKF,YAAY,sBAD9B,uBACLS,EADK,EACLA,QADK,kBAGNA,EAAQG,KAAI,SAACU,EAASQ,GACzB,MAAO,CACHP,KAAM,EAAKC,iBAAiBF,EAAQC,MACpCE,MAAM,mGAAD,OAAqGK,EAAQ,EAA7G,aANA,2C,KAWjBC,kB,uCAAoB,WAAOC,GAAP,uDAAA9B,EAAA,sEACsE,EAAKF,YAAL,kBAA4BgC,IADlG,uBACRC,EADQ,EACRA,UAAWC,EADH,EACGA,OAAQC,EADX,EACWA,OAAQZ,EADnB,EACmBA,KAAMK,EADzB,EACyBA,GAAIQ,EAD7B,EAC6BA,QAASV,EADtC,EACsCA,QAASW,EAD/C,EAC+CA,MAAOC,EADtD,EACsDA,MADtD,UAGe,EAAKC,oBAAoBN,GAHxC,eAGVO,EAHU,iBAIO,EAAKC,mBAAmBL,GAJ/B,eAIVM,EAJU,iBAKM,EAAKC,kBAAkBP,GAL7B,eAKVQ,EALU,iBAMS,EAAKC,qBAAqBP,GANnC,eAMVQ,EANU,iBAOQ,EAAKC,oBAAoBT,GAPjC,eAOVU,EAPU,iBAQK,EAAKC,iBAAiBjB,GAR3B,eAQVkB,EARU,iBASQ,EAAKC,oBAAoBf,GATjC,eASVgB,EATU,iBAUU,EAAKC,sBAAsBjB,GAVrC,eAUVkB,EAVU,OAWV7B,EAAQ,EAAK8B,gBAAgB7B,GAC7B8B,EAAe,EAAKC,gBAAgBnB,GACpCoB,EAAe,EAAKC,gBAAgBtB,GAb1B,kBAeT,CACHd,OACAE,QACA6B,cACAJ,SACAhB,OAAQA,EAAS,GACjBC,OAAQA,EAAS,GACjBF,UAAWO,EACXZ,KACAU,MAAOkB,EACPd,WACAE,UACAE,aACAE,YACAX,MAAOqB,EACPN,cA9BY,4C,2DAkCpBC,sB,uCAAwB,qCAAAnD,EAAA,6DAASD,EAAT,EAASA,IAAT,SACqBE,MAAMF,GAD3B,cACd2D,EADc,gBAEmBA,EAA2BrD,OAF9C,UAEdsD,EAFc,SAGdP,EAHc,UAGAO,EAAwB,oBAAwBC,MAAK,SAAA5C,GAAI,YAA6B,QAArB,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAM6C,gBAAN,eAAgBxC,gBAH7E,aAGA,eAHA,0CAMT+B,EAAYU,QAAQ,iBAAkB,KAAKA,QAAQ,aAAW,YANrD,iCASb,EAAKxC,iBAAiB8B,IATT,4C,2DAYxBH,oB,uCAAsB,2CAAAjD,EAAA,6DAASD,EAAT,EAASA,IAAT,SACYE,MAAMF,GADlB,cACZgE,EADY,gBAEUA,EAAgB1D,OAF1B,cAEZ2D,EAFY,gBAGqB/D,MAAK,UAAC+D,EAAa,uBAAd,aAAC,EAAkCjE,KAH7D,cAGZkE,EAHY,iBAImBA,EAAyB5D,OAJ5C,eAIZ6D,EAJY,OAKZC,EAAiB,GAEN,SAACC,GACd,IAAIC,EAAaD,GAEC,SAAZE,EAAaF,GACf,IAAK,IAAIG,KAAOH,EACA,eAARG,IACAJ,EAAeK,KAAKJ,EAAIlC,QAAQb,MAEhCiD,EADAD,EAAaD,EAAIG,GAAK,KAKlCD,CAAUD,GAGdI,CAAQ,OAACP,QAAD,IAACA,OAAD,EAACA,EAAwBQ,OAE3BC,EAxBY,+BAAA3E,EAAA,MAwBA,WAAOkB,GAAP,eAAAlB,EAAA,sEACuBQ,QAAQS,IAAIC,EAAKR,KAAI,SAAAM,GAAI,OAAI,EAAKlB,YAAL,kBAA4BkB,QADhF,cACR4D,EADQ,yBAGPA,EAAuBlE,KAAI,SAAAU,GAAY,IAAD,MACzC,MAAO,CACHC,KAAM,EAAKC,iBAAiBF,EAAQC,MACpCE,MAAO,EAAKD,iBAAL,UAAsBF,EAAQI,eAA9B,iBAAsB,EAAiBC,aAAvC,iBAAsB,EAAyB,2BAA/C,aAAsB,iBAC7BC,GAAI,EAAKJ,iBAAiBF,EAAQM,SAP5B,2CAxBA,gEAoCLiD,EAAUR,GApCL,qF,2DAuCtBV,gBAAkB,SAAAvC,GACd,OAAOA,EAAKR,KAAI,SAAAM,GAAI,sBAAQA,EAAK6D,KAAKxD,KAAOL,EAAI,e,KAGrD6B,oB,uCAAsB,WAAO3B,GAAP,mBAAAlB,EAAA,sEACqBQ,QAAQS,IAAIC,EAAKR,KAAI,SAAAM,GAAI,aAAIf,MAAK,UAACe,EAAKrE,YAAN,aAAC,EAAWoD,SADnE,cACZ+E,EADY,gBAEmBtE,QAAQS,IAAI6D,EAAyBpE,KAAI,SAAAM,GAAI,OAAIA,EAAKX,WAFzE,cAEZ0E,EAFY,OAGZjC,EAAY,IAAIkC,IAEtBD,EAAuBE,SAAQ,SAAAjE,GAAI,uBAAIA,EAAI,wBAAR,aAAI,mBAA+CiE,SAAQ,SAAAjE,GAAI,OAAI8B,EAAUoC,IAAIlE,EAAKK,YALvG,8BAOPyB,IAPO,2C,2DAUtBH,qB,uCAAuB,WAAOzB,GAAP,mBAAAlB,EAAA,sEACqBQ,QAAQS,IAAIC,EAAKR,KAAI,SAAAM,GAAI,aAAIf,MAAK,UAACe,EAAKrE,YAAN,aAAC,EAAWoD,SADnE,cACboF,EADa,gBAEmB3E,QAAQS,IAAIkE,EAA0BzE,KAAI,SAAAM,GAAI,OAAIA,EAAKX,WAF1E,cAEb+E,EAFa,OAGbxC,EAAa,IAAIoC,IAEvBI,EAAwBH,SAAQ,SAAAjE,GAAI,uBAAIA,EAAI,wBAAR,aAAI,qBAAiDiE,SAAQ,SAAAjE,GAAI,OAAI4B,EAAWsC,IAAIlE,EAAKK,YAL1G,8BAORuB,IAPQ,2C,2DAUvBL,mB,uCAAqB,qCAAAvC,EAAA,6DAASD,EAAT,EAASA,IAAT,SACqBE,MAAMF,GAD3B,cACXsF,EADW,gBAEmBA,EAAwBhF,OAF3C,cAEXiF,EAFW,OAGX9C,EAHW,UAGA8C,EAAsBC,OAAO3B,MAAK,SAAA5C,GAAI,YAA4B,QAAxB,UAAAA,EAAK6C,gBAAL,eAAexC,gBAHzD,aAGA,EAAyEmE,MAHzE,kBAKV,EAAKlE,iBAAiBkB,EAASsB,QAAQ,aAAW,MALxC,2C,2DAQrBrB,kB,uCAAoB,mCAAAzC,EAAA,6DAASD,EAAT,EAASA,IAAT,SACqBE,MAAMF,GAD3B,cACV0F,EADU,gBAEmBA,EAAuBpF,OAF1C,cAEVqF,EAFU,OAGRhD,EAAYgD,EAAZhD,QAHQ,kBAKT,EAAKpB,iBAAL,OAAsBoB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAASrB,OALtB,2C,2DAQpBgB,oB,uCAAsB,WAAOnB,GAAP,uBAAAlB,EAAA,6DACZ2F,EAAkBzE,EAAKL,QAAO,SAAAG,GAAI,OAAKA,EAAI,aAD/B,SAEqBR,QAAQS,IAAI0E,EAAgBjF,KAAI,SAAAM,GAAI,aAAIf,MAAK,UAACe,EAAK4E,eAAN,aAAC,EAAc7F,SAFjF,cAEZ8F,EAFY,gBAGmBrF,QAAQS,IAAI4E,EAAyBnF,KAAI,SAAAQ,GAAI,OAAIA,EAAKb,WAHzE,cAGZyF,EAHY,OAKZC,EAAuB,SAAA1E,GACzB,IAAM2E,EAAkB3E,EAAK4E,MAAM,IAAIvF,KAAI,SAAAM,GAAI,MAAa,MAATA,EAAe,IAAMA,KAAMkF,KAAK,IAEnF,MAAM,GAAN,OAAUF,EAAgB,GAAGG,eAA7B,OAA6CH,EAAgBI,MAAM,KAGjErE,EAAY+D,EAAuBpF,KAAI,SAAAM,GAAS,IAAD,IAC3CqF,EAAI,OAAGrF,QAAH,IAAGA,GAAH,UAAGA,EAAI,2BAAP,iBAAG,EAA+B4C,MAAK,SAAA5C,GAAI,YAA2B,OAAvBA,EAAK6C,SAASxC,MAAuD,cAAlC,OAAJL,QAAI,IAAJA,GAAA,UAAAA,EAAI,qBAAJ,+BAA9E,aAAG,cAEb,MAAO,CACHK,KAAM,EAAKC,iBAAiByE,EAAqB/E,EAAKK,OACtD+B,YAAa,EAAK9B,iBAAiB+E,OAhBzB,kBAoBXtE,GApBW,4C,2DAuBtBsB,gBAAkB,SAAAnC,GAAS,IAAD,IACtB,OAAO,EAAKI,iBAAL,UAAsBJ,EAAKO,aAA3B,iBAAsB,EAAa,2BAAnC,aAAsB,kB,KAGjCsB,iB,uCAAmB,WAAO7B,GAAP,qBAAAlB,EAAA,6DACTsG,EAAa,CACf,qCACA,qCACA,sCAJW,SAOqB9F,QAAQS,IAAIqF,EAAW5F,KAAI,SAAAX,GAAG,OAAIE,MAAMF,OAP7D,cAOTwG,EAPS,gBAQmB/F,QAAQS,IAAIsF,EAAsB7F,KAAI,SAAAQ,GAAI,OAAIA,EAAKb,WARtE,cAQTmG,EARS,OAUTxD,EAASwD,EAAoB3F,QAAO,SAAA4F,GAAe,IAAD,EACpD,iBAAOA,EAAU,+BAAjB,aAAO,EAAuC7C,MAAK,SAAA8C,GAAU,aAAI,UAAAA,EAAU,uBAAV,uBAA4CxF,QAXlG,kBAcR8B,EAAOtC,KAAI,qBAAGW,SAdN,2C,2DAiBnBkC,gBAAkB,SAAArC,GACd,OAAOA,EAAKR,KAAI,qBAAG/D,KAAQ0E,S,KAG/BsF,iB,uCAAmB,WAAOhK,GAAP,mBAAAqD,EAAA,sEACYC,MAAM,kCAAD,OAAmCtD,IADpD,cACTiK,EADS,gBAEWA,EAAavG,OAFxB,uBAEPe,EAFO,EAEPA,QAFO,kBAIRA,EAAQV,KAAI,kBAA4B,CAAEW,KAA9B,EAAGD,QAAWC,UAJlB,2C,2DAOnBC,iBAAmB,SAAAJ,GACf,OAAOA,GAAc,YC3NvB2F,GAAU,IAAIjH,EAgBLkH,GAdQ,yDAAM,WAAMC,GAAN,eAAA/G,EAAA,sEAErB+G,EAAS,CAAEpK,KAAMd,IAFI,SAIKgL,GAAQlF,iBAJb,OAIfxF,EAJe,OAKrB4K,EAAS,CAAEpK,KAAMb,EAAsBc,QAAST,IAL3B,gDAOrB4K,EAAS,CAAEpK,KAAMZ,IAPI,yDAAN,uDCJRiL,I,MCKA,SAAC,GAAY,IAAVC,EAAS,EAATA,GACRC,EAASC,iBAAO,MAChBJ,EAAWK,cACT9K,EAAsB+K,aAAY,SAAA5K,GAAK,OAAIA,EAAMN,eAAjDG,kBAIR,OAFAgL,qBAAU,kBAAMJ,EAAOK,QAAQC,UAAS,IAGpC,sBAAKC,UAAWR,EAAK,oBAAsB,SAA3C,UACI,uBACIS,IAAKR,EACLvK,KAAK,SACLoE,MAAOzE,EACPqL,SAAU,SAACC,GAAD,OAAOb,GFHJc,EEG2BD,EAAEE,OAAO/G,MAAMgH,oBFH1B,CAAEpL,KAAMX,EAAqBY,QAASiL,KAAtD,IAAAA,GEIbG,YAAY,YACZP,UAAU,kBAEd,cAAC,IAAD,CAAMQ,GAAI,CAAEC,SAAS,IAAD,OAAM5L,IAAuBmL,UAAU,cAAcU,aAAW,iBAApF,SACI,qBAAKC,QAAQ,YAAb,SAAyB,4BAAG,oBAAG1G,GAAG,cAAc2G,UAAU,mCAA9B,UAAiE,sBAAMZ,UAAU,MAAMa,EAAE,gQAAgQ5G,GAAG,WAAW,0BAAU+F,UAAU,MAAM/F,GAAG,SAAS6G,OAAO,kFCvBjbC,I,MCIG,WACd,IAAMC,EAAStB,mBACTJ,EAAWK,cAIjB,OAFAE,qBAAU,kBAAMmB,EAAOlB,QAAQC,WAG3B,yBAAQE,IAAKe,EAAQhB,UAAU,aAAaU,aAAW,aAAaO,QAAS,kBAAM3B,ECV1D,CAAEpK,KAAM6B,KDUjC,UACI,yBACA,yBACA,8BEdGmK,I,MCMI,WAAO,IACdjK,EAAa2I,aAAY,SAAA5K,GAAK,OAAIA,EAAMqC,gBAAxCJ,SAUR,OARA4I,qBAAU,WACF5I,EACAkK,SAASC,KAAKC,UAAU5D,IAAI,aAE5B0D,SAASC,KAAKC,UAAUC,OAAO,eAEpC,CAACrK,IAGA,qCACI,cAAC,GAAD,IACA,sBAAK+I,UAAU,MAAf,UACI,cAAC,GAAD,CAAQR,IAAE,IACV,qBAAIQ,UAAU,YAAd,UACI,oBAAIA,UAAU,YAAd,SACI,cAAC,IAAD,CAASA,UAAU,iBAAiBQ,GAAI,CAAEC,SAAU,KAAOc,OAAK,EAAhE,oBAEJ,oBAAIvB,UAAU,YAAd,SACI,cAAC,IAAD,CAASA,UAAU,iBAAiBQ,GAAI,CAAEC,SAAU,eAApD,0CCtBTe,GAJU,SAAAC,GACrB5B,qBAAU,kBAAMsB,SAASM,MAAQA,MCWtBC,GAVS,WACpB,IAAMpC,EAAWK,cAEjBE,qBAAU,WACF8B,OAAOC,WAAW,yBAAyBC,SAC3CvC,EJNmB,CAAEpK,KAAM8B,MIQhC,CAACsI,KCVOwC,GCGQ,WAInB,OAHAJ,KACAF,GAAiB,mBAGb,kCACI,4DCTGO,I,MCEM,SAAC,GAAD,QAAGC,gBAAH,MAAc,uBAAd,EAAsCC,EAAtC,EAAsCA,KAAtC,OACjB,oBAAIjC,UAAWiC,EAAO,oCAAsC,uCAA5D,SAAqGD,MCJ1F,I,MAAA,IAA0B,kCCA1B,OAA0B,iCCSzC,ICReE,GDQC,SAAC,GAAY,IAAV1C,EAAS,EAATA,GACT2C,EAAUzC,iBAAO,MAEjB0C,EAAmBC,uBAAY,WACjC,IARcC,EAAKC,EAQbC,EAAS,CAACC,GAAUC,IAE1B,OAAOF,GAVOF,EAUa,EAVRC,EAUWC,EAAOG,OAAS,EAT3CC,KAAKC,MAAMD,KAAKE,UAAYP,EAAMD,EAAM,IAAMA,MAUlD,IAMH,OAJAzC,qBAAU,WACNsC,EAAQrC,QAAQiD,IAAMX,MACvB,CAACA,IAGA,sBAAKpC,UAAWR,EAAK,sBAAwB,2BAA7C,UACI,qBAAKQ,UAAU,mBAAmBgD,IAAI,UAAU/C,IAAKkC,IACrD,mBAAGnC,UAAU,gBAAb,4BExBGiD,I,MCGK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUvI,EAAb,EAAaA,MAAb,OAChB,oBAAIqF,UAAU,eAAd,SAEQkD,EAASjK,KAAI,gBAAGW,EAAH,EAAGA,KAAME,EAAT,EAASA,MAAT,OACT,oBAAekG,UAAU,qBAAzB,SACI,eAAC,IAAD,CAAMA,UAAU,0BAA0BQ,GAAE,WAAM5G,GAAlD,UACI,sBAAMoG,UAAU,qBAAhB,SAAsCpG,IAC3B,YAAVE,GAAuBa,EAAQ,KAAO,qBAAKqF,UAAU,wBAAwB+C,IAAKjJ,EAAOkJ,IAAKpJ,QAH9FA,UCFnBuJ,GAAa,kBACf,mBAAGnD,UAAU,uBAAb,iCCNWoD,GDSI,WACf,IAAM9D,EAAWK,cADI,EAEiEC,aAAY,SAAA5K,GAAK,OAAIA,EAAMN,eAAzGC,EAFa,EAEbA,mBAAoBC,EAFP,EAEOA,iBAAkBC,EAFzB,EAEyBA,kBAAmBC,EAF5C,EAE4CA,iBAC3DJ,EAAckL,aAAY,SAAA5K,GAC5B,OAAIH,EACOG,EAAMN,YAAYA,YAAY0E,QAAO,SAAAG,GAAI,OAAIA,EAAKK,KAAKyJ,SAASxO,MAGpEG,EAAMN,YAAYA,eAW7B,OARAmL,qBAAU,WACD/K,GACG6M,OAAOC,WAAW,sBAAsBC,SACxCvC,EAASD,QAGlB,CAACC,EAAUxK,IAEVH,EACO,cAAC,GAAD,CAAS6K,IAAE,IAGlB5K,EACO,qDAGgB,IAAvBF,EAAYiO,OACL,cAAC,GAAD,IAIP,qBAAK3C,UAAU,cAAf,SACI,cAAC,GAAD,CAAakD,SAAUxO,OExC7B0K,GAAU,IAAIjH,EAaLmL,GAXS,SAACzN,EAAOC,GAAR,8CAAmB,WAAMwJ,GAAN,eAAA/G,EAAA,+EAER6G,GAAQvG,gBAAgBhD,EAAOC,GAFvB,OAE7BP,EAF6B,OAGnC+J,EAAS,CAAEpK,KAAME,EAAuBD,QAASI,IAHd,gDAKnC+J,EAAS,CAAEpK,KAAMG,IALkB,yDAAnB,uDCJTkO,I,MCEG,SAAC,GAAc,IACzBvD,EAAY,wCAMhB,OAP4B,EAAXwD,OAIbxD,GAAa,YAIb,qBAAKA,UAAWA,EAAhB,SAA2B,sBAAKA,UAAU,mBAAf,UACvB,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,wBAAW,+BCMtHyD,I,MAZQ,WACnB,IAAMnE,EAAWK,cADQ,EAEyBC,aAAY,SAAA5K,GAAK,OAAIA,EAAMO,gBAArEI,SAAYC,EAFK,EAELA,OAAQE,EAFH,EAEGA,OAAQC,EAFX,EAEWA,QAEpC,OACI,yBAAQiK,UAAWlK,GAAUC,EAAU,iBAAmB,YAAakL,QAAS,kBAAM3B,EHG3D,CAAEpK,KAAMI,KGHnC,UACI,sBAAM0K,UAAU,kBAAhB,uBACA,cAAC,GAAD,CAAWwD,KAAM5N,IAAU,SCTjC8N,I,MAAS,sBAAM1D,UAAU,eAAhB,sCCHA2D,GDKF,SAAC,GAAc,IAAZlK,EAAW,EAAXA,KACJG,EAAgBH,EAAhBG,KAAME,EAAUL,EAAVK,MAEd,OACI,oBAAIkG,UAAU,OAAd,SACI,eAAC,IAAD,CAAMA,UAAU,kBAAkBQ,GAAI,CAAEC,SAAS,IAAD,OAAM7G,IAAtD,UACe,YAAVE,EAAsB4J,GAAS,qBAAK1D,UAAU,gBAAgB+C,IAAKjJ,EAAOkJ,IAAKpJ,IAChF,sBAAMoG,UAAU,aAAhB,SAA8BpG,UEZ/BgK,I,MCOM,WACjB,IAAMtE,EAAWK,cADM,EAE0FC,aAAY,SAAA5K,GAAK,OAAIA,EAAMO,gBAApIA,EAFe,EAEfA,aAAcC,EAFC,EAEDA,oBAAqBC,EAFpB,EAEoBA,kBAAmBC,EAFvC,EAEuCA,kBAFvC,IAE0DC,SAAYG,EAFtE,EAEsEA,OAAQD,EAF9E,EAE8EA,MAQrG,OANAgK,qBAAU,WACDnK,GACD4J,EAASgE,GAAgBzN,EAAOC,MAErC,CAACJ,EAAmB4J,EAAUzJ,EAAOC,IAEpCN,EACO,cAAC,GAAD,CAASgK,IAAE,IAIlB,qCACI,oBAAIQ,UAAU,gBAAd,SACKzK,EAAa0D,KAAI,SAAAQ,GACd,OAAO,cAAC,GAAD,CAAoBA,KAAMA,GAAfA,EAAKQ,SAG9BxE,GAAqB,qDACtB,cAAC,GAAD,SC7BGoO,I,MCQE,WAIb,OAHArC,GAAiB,WACjBE,KAGI,0BAAS1B,UAAU,OAAnB,UACI,cAAC,GAAD,CAAciC,MAAI,IAClB,sBAAKjC,UAAU,cAAf,UACI,cAAC,GAAD,IACA,qBAAKA,UAAU,sBAAf,SACI,cAAC,GAAD,SAGR,qBAAKA,UAAU,cAAf,SACI,cAAC,GAAD,W,oBCrBV8D,GAAS,kBACX,0CAOWC,GAJG,SAACtK,EAAMvB,GACrB,OAAuB,IAAhBuB,EAAKkJ,OAAe,cAAC,GAAD,IAAYzK,GCFrC8L,I,MAAW,SAACvK,GACd,IAAMwK,EAAS,GACTvJ,EAAQ,GAEdjB,EAAK+D,SAAQ,SAAAjE,GACT0K,EAAOlH,KAAP,MAAAkH,EAAM,YAASC,OAAOC,KAAK5K,KAC3BmB,EAAMqC,KAAN,MAAArC,EAAK,YAASwJ,OAAOE,OAAO7K,QAGhC,IAAM8K,EAAe,CACjBC,QAAS,CACLL,SACAM,OAAQ,CACJ3F,KAAM,cAEV4F,YAAa,CACTC,IAAK,CAACC,YAAY,KAG1BC,OAAQ,CAAC,CACL/K,KAAM,OACNH,KAAMiB,KAId,OAAO,cAAC,KAAD,CAAOxF,KAAK,MAAM0P,MAAM,OAAON,QAASD,EAAaC,QAASK,OAAQN,EAAaM,WC7B/EE,GDgCD,SAAC,GAAD,QAAGpL,YAAH,MAAU,GAAV,SACV,sBAAKuG,UAAU,QAAf,UACI,oBAAIA,UAAU,4CAAd,mBACC+D,GAAUtK,EAAMuK,GAASvK,QE/B5BqL,I,MAAO,SAAC,GAAD,SAAGrL,KACPR,KAAI,gBAAGgB,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAME,EAAb,EAAaA,MAAb,OACL,oBAAakG,UAAU,kBAAvB,SACI,eAAC,IAAD,CAAMQ,GAAE,WAAM5G,GAAQoG,UAAU,uBAAhC,UACI,qBAAKA,UAAU,qBAAqB+C,IAAKjJ,EAAOkJ,IAAKpJ,IACrD,sBAAMoG,UAAU,kBAAhB,SAAmCpG,QAHlCK,QCNF8K,GDeG,SAAC,GAAD,QAAGtL,YAAH,MAAU,GAAV,SACd,sBAAKuG,UAAU,YAAf,UACI,oBAAIA,UAAU,gDAAd,uBACCvG,EAAKkJ,OAAS,GAAqB,IAAhBlJ,EAAKkJ,OAAe,KAAO,mBAAG3C,UAAU,kBAAb,0CAC/C,oBAAIA,UAAU,kBAAd,SACK+D,GAAUtK,EAAM,cAAC,GAAD,CAAMA,KAAMA,WEpB1BuL,I,MCEK,SAAC,GAAD,IAAGvL,EAAH,EAAGA,KAAH,OAChB,mBAAGuG,UAAU,mCAAb,SAAiDvG,MCHtCwL,I,MCEA,SAAC,GAAD,IAAGxL,EAAH,EAAGA,KAAH,OACX,sBAAKuG,UAAU,uBAAf,UACI,oBAAIA,UAAU,6CAAd,oBACA,uBAAMA,UAAU,eAAhB,UAAgCvG,EAAhC,cCLOyL,I,MCEA,SAAC,GAAD,IAAGzL,EAAH,EAAGA,KAAH,OACX,sBAAKuG,UAAU,uBAAf,UACI,oBAAIA,UAAU,6CAAd,qBACA,uBAAMA,UAAU,eAAhB,UAAgCvG,EAAhC,aCEFqL,I,MAAO,SAAC,GAAD,SAAGrL,KACPR,KAAI,SAACM,EAAMY,GAAP,OACL,oBAAI6F,UAAU,eAAd,SAEiB,SAATzG,EAPH,SAQY,WAATA,EATD,SAEI,WAIuBY,QCT3BgL,GDmBA,SAAC,GAAmB,IAAD,IAAhB1L,YAAgB,MAAT,GAAS,EAC9B,OACI,sBAAKuG,UAAU,uBAAf,UACI,oBAAIA,UAAU,6CAAd,oBACA,oBAAIA,UAAU,eAAd,SACK+D,GAAUtK,EAAM,cAAC,GAAD,CAAMA,KAAMA,WErBvCqL,I,MAAO,SAAC,GAAD,SAAGrL,KACPR,KAAI,SAACM,EAAMY,GAAP,OACL,oBAAI6F,UAAU,kBAAd,SAA6CzG,EAAKK,MAAbO,QCL9BiL,GDSG,SAAC,GAAD,QAAG3L,YAAH,MAAU,GAAV,SACd,sBAAKuG,UAAU,0BAAf,UACI,oBAAIA,UAAU,gDAAd,uBACA,oBAAIA,UAAU,kBAAd,SACK+D,GAAUtK,EAAM,cAAC,GAAD,CAAMA,KAAMA,WEb1B4L,I,MCEE,SAAC,GAAD,IAAG5L,EAAH,EAAGA,KAAH,OACb,sBAAKuG,UAAU,yBAAf,UACI,oBAAIA,UAAU,+CAAd,uBACA,sBAAMA,UAAU,iBAAhB,SAAkCvG,SCL3B6L,I,MCEC,SAAC,GAAD,IAAG7L,EAAH,EAAGA,KAAH,OACZ,sBAAKuG,UAAU,wBAAf,UACI,oBAAIA,UAAU,8CAAd,qBACA,sBAAMA,UAAU,gBAAhB,SAAiCvG,SCL1B8L,GCQI,SAAC,GAAD,QAAG9L,KAAQkC,EAAX,EAAWA,YAAanB,EAAxB,EAAwBA,OAAQD,EAAhC,EAAgCA,OAAQgB,EAAxC,EAAwCA,OAAQjB,EAAhD,EAAgDA,UAAWS,EAA3D,EAA2DA,SAAUE,EAArE,EAAqEA,QAArE,OACf,qCACI,cAAC,GAAD,CAAaxB,KAAMkC,IACnB,cAAC,GAAD,CAAQlC,KAAMe,IACd,cAAC,GAAD,CAAQf,KAAMc,IACd,cAAC,GAAD,CAAQd,KAAM8B,IACd,cAAC,GAAD,CAAW9B,KAAMa,IACjB,cAAC,GAAD,CAAUb,KAAMsB,IAChB,cAAC,GAAD,CAAStB,KAAMwB,QChBRuK,I,MCGE,SAAC,GAAc,IAAZ/L,EAAW,EAAXA,KACRnB,EAAQmN,cAARnN,IAER,OACImB,EAAKR,KAAI,SAACM,EAAMY,GAAP,OACL,oBAAI6F,UAAU,YAAd,SACI,cAAC,IAAD,CAAMA,UAAU,uBAAuBQ,GAAE,UAAKlI,EAAL,iBAAiBiB,GAA1D,SAAmEA,KADxCY,QCR5BuL,GCGI,SAAC,GAAD,QAAGjM,YAAH,MAAU,GAAV,SACf,gCACI,oBAAIuG,UAAU,yBAAd,wBACA,oBAAIA,UAAU,qBAAd,SACK+D,GAAUtK,EAAM,cAAC,GAAD,CAAUA,KAAMA,WCP9BkM,GCGG,SAAC,GAAD,QAAGlM,YAAH,MAAU,GAAV,SACd,gCACI,oBAAIuG,UAAU,yBAAd,uBACA,oBAAIA,UAAU,qBAAd,SACK+D,GAAUtK,EAAM,cAAC,GAAD,CAAUA,KAAMA,WCP9BmM,GCGF,SAAC,GAAD,QAAGnM,YAAH,MAAU,GAAV,SACT,gCACI,oBAAIuG,UAAU,yBAAd,kBACA,oBAAIA,UAAU,qBAAd,SACK+D,GAAUtK,EAAM,cAAC,GAAD,CAAUA,KAAMA,WCLvC2F,GAAU,IAAIjH,EAaL0N,GAXa,SAAC3Q,GAAD,8CAAU,WAAMoK,GAAN,eAAA/G,EAAA,sEAE9B+G,EAAS,CAAEpK,KAAMsB,IAFa,SAIC4I,GAAQF,iBAAiBhK,GAJ1B,OAIxByB,EAJwB,OAK9B2I,EAAS,CAAEpK,KAAMuB,EAA4BtB,QAASwB,IALxB,gDAO9B2I,EAAS,CAAEpK,KAAMwB,IAPa,yDAAV,uDCJboP,I,MCOO,SAAC,GAAc,IAAZ5Q,EAAW,EAAXA,KACb+E,EAAO8L,cAAP9L,GACFqF,EAAWK,cAFe,EAG6CC,aAAY,SAAA5K,GAAK,OAAIA,EAAM2B,oBAAhGA,EAHwB,EAGxBA,iBAAkBC,EAHM,EAGNA,wBAAyBC,EAHnB,EAGmBA,sBAInD,OAFAgJ,qBAAU,kBAAOP,EAASuG,GAAoB3Q,MAAQ,CAACoK,EAAUpK,IAE7D2B,EAEI,sBAAKmJ,UAAU,mBAAf,UACI,mBAAGA,UAAU,yBAAb,gCACA,cAAC,IAAD,CAAMA,UAAU,2BAA2BQ,GAAE,WAAMvG,GAAnD,qBAKRrD,EACO,cAAC,GAAD,CAAS4I,IAAE,IAIlB,qCACI,eAAC,IAAD,CAAMQ,UAAU,yBAAyBQ,GAAE,WAAMvG,GAAjD,UACI,sBAAM+F,UAAU,OAAhB,SAAwB9K,IACxB,sBAAM8K,UAAU,OAAhB,qBAEJ,qBAAKA,UAAU,iBAAf,SACI,cAAC,GAAD,CAAakD,SAAUvM,EAAkBgE,OAAK,WClC/CqL,GCMK,SAAC,GAAgD,IAAD,IAA7CvM,KAAQkB,EAAqC,EAArCA,MAAOQ,EAA8B,EAA9BA,WAAYE,EAAkB,EAAlBA,UACtCoE,EAAWwG,cAAXxG,OACFvK,EAAO,IAAIgR,gBAAgBzG,GAAQ0G,IAAI,QAE7C,OAAIjR,EACO,cAAC,GAAD,CAAeA,KAAMA,IAI5B,qCACI,cAAC,GAAD,CAAMuE,KAAMkB,IACZ,cAAC,GAAD,CAAYlB,KAAM0B,IAClB,cAAC,GAAD,CAAW1B,KAAM4B,QClBd+K,I,MCGS,WACpB,IAAMC,EAAa3G,iBAAO,MAClB4G,EAAWC,cAAXD,OAIR,OAFAzG,qBAAU,kBAAMwG,EAAWvG,QAAQC,UAAS,IAGxC,qBAAKC,UAAU,oBAAf,SACI,sBAAKA,UAAU,0BAAf,UACI,qCACA,+CACA,wBAAQA,UAAU,0BAA0BC,IAAKoG,EAAYpF,QAASqF,EAAtE,4BCZVlH,GAAU,IAAIjH,EAaLqO,GAXQ,SAACvM,GAAD,8CAAQ,WAAMqF,GAAN,eAAA/G,EAAA,sEAEvB+G,EAAS,CAAEpK,KAAMe,IAFM,SAIGmJ,GAAQhF,kBAAkBH,GAJ7B,OAIjB7D,EAJiB,OAKvBkJ,EAAS,CAAEpK,KAAMgB,EAAsBf,QAASiB,IALzB,gDAOvBkJ,EAAS,CAAEpK,KAAMiB,IAPM,yDAAR,uDCJRsQ,I,MCeK,WAAO,IACfxM,EAAO8L,cAAP9L,GACFqF,EAAWK,cAFK,EAGwCC,aAAY,SAAA5K,GAAK,OAAIA,EAAMoB,eAAjFA,EAHc,EAGdA,YAAaC,EAHC,EAGDA,mBAAoBC,EAHnB,EAGmBA,iBASzC,OAPAoL,KACAF,GACIlL,EAAmB,6BAAH,oBAA+C2D,EAAG,GAAGyE,eAArD,OAAqEzE,EAAG0E,MAAM,KAElGkB,qBAAU,kBAAMP,EtERc,CAAEpK,KAAMV,MsEQG,CAAC8K,IAC1CO,qBAAU,kBAAMP,EAASkH,GAAevM,MAAM,CAACqF,EAAUrF,IAErD3D,EACO,cAAC,GAAD,IAGPD,EACO,cAAC,GAAD,IAIP,0BAAS2J,UAAU,UAAnB,UACI,cAAC,GAAD,CAAcgC,SAAU5L,EAAYwD,OACpC,qBAAKoG,UAAU,iBAAf,SACI,qBAAKA,UAAU,MAAM+C,IAAK3M,EAAY0D,MAAOkJ,IAAK5M,EAAYwD,SAElE,qBAAKoG,UAAU,0CAAf,SACI,cAAC,GAAD,CAAYvG,KAAMrD,MAEtB,qBAAK4J,UAAU,0CAAf,SACI,cAAC,GAAD,CAAavG,KAAMrD,MAEvB,qBAAK4J,UAAU,2CAAf,SACI,cAAC,GAAD,CAAOvG,KAAMrD,EAAYsE,UAE7B,qBAAKsF,UAAU,+CAAf,SACI,cAAC,GAAD,CAAWvG,KAAMrD,EAAYqF,cAEjC,cAAC,IAAD,CAAM+E,GAAI,CAAEC,SAAU,KAAOT,UAAU,wBAAvC,yCCrDG0G,I,MCOH,kBACR,qCACI,wBAAQ1G,UAAU,SAAlB,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CAAO2G,UAAWzF,GAAY0F,KAAK,UAG3C,sBAAM5G,UAAU,OAAhB,SACI,qBAAKA,UAAU,YAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO2G,UAAW9C,GAAU+C,KAAK,IAAIrF,OAAK,IAC1C,cAAC,IAAD,CAAOoF,UAAW7E,GAAgB8E,KAAK,gBACvC,cAAC,IAAD,CAAOD,UAAWF,GAAaG,KAAK,qB,MCXxDC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,CAAUxP,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,GAAD,UAJR,OASA4J,SAAS6F,eAAe,Y","file":"static/js/main.d6c9c1d0.chunk.js","sourcesContent":["export const POKEMON_LIST_LOADING = 'POKEMON_LIST_LOADING';\r\nexport const POKEMON_LIST_SUCCESS = 'POKEMON_LIST_SUCCESS';\r\nexport const POKEMON_LIST_FAILURE = 'POKEMON_LIST_FAILURE';\r\nexport const POKEMON_LIST_SEARCH  = 'POKEMON_LIST_SEARCH';\r\nexport const CLEAN_SEARCH         = 'CLEAN_SEARCH';","import { POKEMON_LIST_LOADING, POKEMON_LIST_SUCCESS, POKEMON_LIST_FAILURE, POKEMON_LIST_SEARCH, CLEAN_SEARCH } from './pokemonListTypes';\r\n\r\nconst initialState = {\r\n    pokemonList: [],\r\n    pokemonListLoading: false,\r\n    pokemonListError: false,\r\n    pokemonListSearch: '',\r\n    pokemonListCache: false\r\n}\r\n\r\nconst pokemonListReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case POKEMON_LIST_LOADING:\r\n            return { ...state, pokemonListLoading: true, pokemonListError: false }\r\n        case POKEMON_LIST_SUCCESS:\r\n            return { ...state, pokemonListLoading: false, pokemonListError: false, pokemonListCache: true, pokemonList: payload }\r\n        case POKEMON_LIST_FAILURE:\r\n            return { ...state, pokemonListLoading: false, pokemonListError: true }\r\n        case POKEMON_LIST_SEARCH:\r\n            return { ...state, pokemonListSearch: payload }\r\n        case CLEAN_SEARCH:\r\n            return { ...state, pokemonListSearch: '' }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default pokemonListReducer;","export const POKEMON_CARDS_SUCCESS = 'POKEMON_CARDS_SUCCESS';\r\nexport const POKEMON_CARDS_FAILURE = 'POKEMON_CARDS_FAILURE';\r\nexport const GET_MORE_CARDS        = 'GET_MORE_CARDS';","import { POKEMON_CARDS_SUCCESS, POKEMON_CARDS_FAILURE, GET_MORE_CARDS } from './pokemonCardsTypes';\r\n\r\nconst initialState = {\r\n    pokemonCards: [],\r\n    pokemonCardsLoading: true,\r\n    pokemonCardsError: false,\r\n    pokemonCardsCache: false,\r\n    loadMore: {\r\n        status: false,\r\n        limit: 12,\r\n        offset: 0,\r\n        maxData: 1117\r\n    }\r\n}\r\n\r\nconst pokemonCardsReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case POKEMON_CARDS_SUCCESS:\r\n            return { \r\n                ...state, \r\n                pokemonCardsLoading: false, \r\n                pokemonCardsError: false,\r\n                pokemonCardsCache: true,\r\n                pokemonCards: [ ...state.pokemonCards, ...payload ],\r\n                loadMore: { \r\n                    ...state.loadMore, \r\n                    status: false,\r\n                } \r\n            }\r\n        case POKEMON_CARDS_FAILURE:\r\n            return { \r\n                ...state, \r\n                pokemonCardsLoading: false,  \r\n                pokemonCardsError: true,\r\n                loadMore: {\r\n                    ...state.loadMore,\r\n                    status: false\r\n                } \r\n            }\r\n        case GET_MORE_CARDS: \r\n            return { \r\n                ...state, \r\n                pokemonCardsCache: false, \r\n                loadMore: {\r\n                    ...state.loadMore,\r\n                    status: true,\r\n                    offset: state.loadMore.offset + 12 \r\n                } \r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default pokemonCardsReducer;","const POKEMON_PAGE_LOADING = 'POKEMON_PAGE_LOADING';\r\nconst POKEMON_PAGE_SUCCESS = 'POKEMON_PAGE_SUCCESS';\r\nconst POKEMON_PAGE_FAILURE = 'POKEMON_PAGE_FAILURE';\r\n\r\nexport {\r\n    POKEMON_PAGE_LOADING,\r\n    POKEMON_PAGE_SUCCESS,\r\n    POKEMON_PAGE_FAILURE\r\n}","import { POKEMON_PAGE_LOADING, POKEMON_PAGE_SUCCESS, POKEMON_PAGE_FAILURE } from './pokemonPageTypes';\r\n\r\nconst initialState = {\r\n    pokemonPage: [],\r\n    pokemonPageLoading: true,\r\n    pokemonPageError: false\r\n}\r\n\r\nconst pokemonPageReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case POKEMON_PAGE_LOADING:\r\n            return { ...state, pokemonPageLoading: true, pokemonPageError: false }\r\n        case POKEMON_PAGE_SUCCESS:\r\n            return { ...state, pokemonPageLoading: false, pokemonPageError: false, pokemonPage: payload }\r\n        case POKEMON_PAGE_FAILURE:\r\n            return { ...state, pokemonPageLoading: false, pokemonPageError: true }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default pokemonPageReducer;","const TYPE_FILTERED_LIST_LOADING = 'TYPE_FILTERED_LIST_LOADING';\r\nconst TYPE_FILTERED_LIST_SUCCESS = 'TYPE_FILTERED_LIST_SUCCESS';\r\nconst TYPE_FILTERED_LIST_FAILURE = 'TYPE_FILTERED_LIST_FAILURE';\r\n\r\nexport {\r\n    TYPE_FILTERED_LIST_LOADING,\r\n    TYPE_FILTERED_LIST_SUCCESS,\r\n    TYPE_FILTERED_LIST_FAILURE,\r\n}","import { TYPE_FILTERED_LIST_LOADING, TYPE_FILTERED_LIST_SUCCESS, TYPE_FILTERED_LIST_FAILURE } from './typeFilteredListTypes';\r\n\r\nconst initialState = {\r\n    typeFilteredList: [],\r\n    typeFilteredListLoading: false,\r\n    typeFilteredListError: false,\r\n}\r\n\r\nconst typeFilteredListReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case TYPE_FILTERED_LIST_LOADING:\r\n            return { ...state, typeFilteredListLoading: true, typeFilteredListError: false }\r\n        case TYPE_FILTERED_LIST_SUCCESS:\r\n            return { ...state, typeFilteredListLoading: false, typeFilteredListError: false, typeFilteredList: payload }\r\n        case TYPE_FILTERED_LIST_FAILURE:\r\n            return { ...state, typeFilteredListLoading: false, typeFilteredListError: true }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default typeFilteredListReducer;","export const TOGGLE_MENU = 'TOGGLE_MENU';\r\nexport const HIDE_MENU = 'HIDE_MENU';","import { HIDE_MENU, TOGGLE_MENU } from './NavigationSmTypes';\r\n\r\nconst initialState = {\r\n    showMenu: false\r\n}\r\n\r\nconst NavigationSmReducer = (state = initialState, action) => {\r\n    const { type } = action;\r\n\r\n    switch(type) {\r\n        case TOGGLE_MENU:\r\n            return { ...state, showMenu: !state.showMenu}\r\n        case HIDE_MENU:\r\n            return { ...state, showMenu: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default NavigationSmReducer;","import { combineReducers } from 'redux';\r\nimport pokemonListReducer from './pokemonList/pokemonListReducer';\r\nimport pokemonCardsReducer from './pokemonCards/pokemonCardsReducer';\r\nimport pokemonPageReducer from './pokemonPage/pokemonPageReducer';\r\nimport typeFilteredListReducer from './typeFilteredList/typeFilteredListReducer';\r\nimport navigationSmReducer from './NavigationSm/NavigationSmReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    pokemonList: pokemonListReducer,\r\n    pokemonCards: pokemonCardsReducer,\r\n    pokemonPage: pokemonPageReducer,\r\n    typeFilteredList: typeFilteredListReducer,\r\n    navigationSm: navigationSmReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import ErrorBoundary from './ErrorBoundary';\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({ error: true })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <h1>Something goes wrong</h1>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}","export default class PokemonService {\r\n    apiBase = 'https://pokeapi.co/api/v2/';\r\n\r\n    getResource = async (url) => {\r\n        const result = await fetch(`${this.apiBase}${url}`);\r\n\r\n        if (!result.ok) {\r\n            throw new Error(`Could not fetch ${this.apiBase}${url}`);\r\n        }\r\n\r\n        return await result.json();\r\n    }\r\n\r\n    getMorePokemons = async (limit, offset) => {\r\n        const { results } = await this.getResource(`pokemon/?limit=${limit}&offset=${offset}`);\r\n\r\n        const dataResponse = await Promise.allSettled(results.map(({ url }) => fetch(url)));\r\n        const dataSuccess = dataResponse.filter(resp => resp.status === 'fulfilled' && resp.value.ok).map(item => item.value);\r\n        const dataArray = await Promise.all(dataSuccess.map(data => data.json()));\r\n\r\n\r\n        return dataArray.map(pokemon => {\r\n            return {\r\n                name: this._isDataAvailable(pokemon.name),\r\n                image: this._isDataAvailable(pokemon.sprites?.other?.['official-artwork']?.['front_default']),\r\n                id: this._isDataAvailable(pokemon.id)\r\n            }\r\n        })\r\n    }\r\n\r\n    getAllPokemons = async () => {\r\n        const { results } = await this.getResource('pokemon/?limit=898');\r\n\r\n        return results.map((pokemon, index) => {\r\n            return {\r\n                name: this._isDataAvailable(pokemon.name),\r\n                image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${index + 1}.png`\r\n            }\r\n        })\r\n    }\r\n\r\n    getCurrentPokemon = async (pokemonName) => {\r\n        const { abilities, height, weight, name, id, species, sprites, stats, types } = await this.getResource(`pokemon/${pokemonName}`);\r\n\r\n        const pokemonAbilities = await this.getPokemonAbilities(abilities);\r\n        const category = await this.getPokemonCategory(species);\r\n        const habitat = await this.getPokemonHabitat(species);\r\n        const weaknesses = await this.getPokemonWeaknesses(types);\r\n        const strengths = await this.getPokemonStrengths(types);\r\n        const gender = await this.getPokemonGender(pokemonName);\r\n        const evolution = await this.getPokemonEvolution(species);\r\n        const description = await this.getPokemonDescription(species);\r\n        const image = this.getPokemonImage(sprites);\r\n        const pokemonTypes = this.getPokemonTypes(types);\r\n        const pokemonStats = this.getPokemonStats(stats);\r\n\r\n        return {\r\n            name,\r\n            image,\r\n            description,\r\n            gender,\r\n            height: height / 10,\r\n            weight: weight / 10,\r\n            abilities: pokemonAbilities,\r\n            id,\r\n            types: pokemonTypes,\r\n            category,\r\n            habitat,\r\n            weaknesses,\r\n            strengths,\r\n            stats: pokemonStats,\r\n            evolution\r\n        }\r\n    }\r\n\r\n    getPokemonDescription = async ({ url }) => {\r\n        const pokemonDescriptionResponse = await fetch(url);\r\n        const pokemonDescriptionResult = await pokemonDescriptionResponse.json();\r\n        const description = pokemonDescriptionResult['flavor_text_entries'].find(item => item?.language?.name === 'en')?.['flavor_text'];\r\n\r\n        if (description) {\r\n            return description.replace(/(\\n|\\f|\\t|\\v)/g, ' ').replace('POKéMON', 'pokemon');\r\n        }\r\n\r\n        return this._isDataAvailable(description);\r\n    }\r\n\r\n    getPokemonEvolution = async ({ url }) => {\r\n        const speciesResponse = await fetch(url);\r\n        const speciesResult = await speciesResponse.json();\r\n        const pokemonEvolutionResponse = await fetch(speciesResult['evolution_chain']?.url);\r\n        const pokemonEvolutionResult = await pokemonEvolutionResponse.json();\r\n        const evolutionChain = [];\r\n\r\n        const getChain = (obj) => {\r\n            let currentObj = obj;\r\n\r\n            const recursive = (obj) => {\r\n                for (let key in obj) {\r\n                    if (key === 'evolves_to') {\r\n                        evolutionChain.push(obj.species.name);\r\n                        currentObj = obj[key][0];\r\n                        recursive(currentObj);\r\n                    }\r\n                }\r\n            }\r\n            recursive(currentObj);\r\n\r\n        }\r\n        getChain(pokemonEvolutionResult?.chain);\r\n\r\n        const getImages = async (data) => {\r\n            const evolutionMatchedArrays = await Promise.all(data.map(item => this.getResource(`pokemon/${item}`)));\r\n\r\n            return evolutionMatchedArrays.map(pokemon => {\r\n                return {\r\n                    name: this._isDataAvailable(pokemon.name),\r\n                    image: this._isDataAvailable(pokemon.sprites?.other?.['official-artwork']?.['front_default']),\r\n                    id: this._isDataAvailable(pokemon.id)\r\n                }\r\n            })\r\n        }\r\n\r\n        return await getImages(evolutionChain);\r\n    }\r\n\r\n    getPokemonStats = data => {\r\n        return data.map(item => ({ [item.stat.name]: item['base_stat'] }));\r\n    }\r\n\r\n    getPokemonStrengths = async (data) => {\r\n        const pokemonStrengthsResponse = await Promise.all(data.map(item => fetch(item.type?.url)));\r\n        const pokemonStrengthsResult = await Promise.all(pokemonStrengthsResponse.map(item => item.json()));\r\n        const strengths = new Set();\r\n\r\n        pokemonStrengthsResult.forEach(item => item['damage_relations']?.['double_damage_to'].forEach(item => strengths.add(item.name)));\r\n\r\n        return [...strengths];\r\n    }\r\n\r\n    getPokemonWeaknesses = async (data) => {\r\n        const pokemonWeaknessesResponse = await Promise.all(data.map(item => fetch(item.type?.url)));\r\n        const pokemonWeaknessesResult = await Promise.all(pokemonWeaknessesResponse.map(item => item.json()));\r\n        const weaknesses = new Set();\r\n\r\n        pokemonWeaknessesResult.forEach(item => item['damage_relations']?.['double_damage_from'].forEach(item => weaknesses.add(item.name)));\r\n\r\n        return [...weaknesses];\r\n    }\r\n\r\n    getPokemonCategory = async ({ url }) => {\r\n        const pokemonCategoryResponse = await fetch(url);\r\n        const pokemonCategoryResult = await pokemonCategoryResponse.json();\r\n        const category = pokemonCategoryResult.genera.find(item => item.language?.name === 'en')?.genus;\r\n\r\n        return this._isDataAvailable(category.replace('Pokémon', ''));\r\n    }\r\n\r\n    getPokemonHabitat = async ({ url }) => {\r\n        const pokemonHabitatResponse = await fetch(url);\r\n        const pokemonHabitatResult = await pokemonHabitatResponse.json();\r\n        const { habitat } = pokemonHabitatResult;\r\n\r\n        return this._isDataAvailable(habitat?.name);\r\n    }\r\n\r\n    getPokemonAbilities = async (data) => {\r\n        const abilitiesToShow = data.filter(item => !item['is_hidden']);\r\n        const pokemonAbilitiesResponse = await Promise.all(abilitiesToShow.map(item => fetch(item.ability?.url)));\r\n        const pokemonAbilitiesResult = await Promise.all(pokemonAbilitiesResponse.map(data => data.json()));\r\n\r\n        const transformAbilityName = name => {\r\n            const transformedName = name.split('').map(item => item === '-' ? ' ' : item).join('');\r\n\r\n            return `${transformedName[0].toUpperCase()}${transformedName.slice(1)}`;\r\n        }\r\n\r\n        const abilities = pokemonAbilitiesResult.map(item => {\r\n            const text = item?.['flavor_text_entries']?.find(item => item.language.name === 'en' && item?.['version_group']?.['name'] === 'sun-moon')?.['flavor_text'];\r\n\r\n            return {\r\n                name: this._isDataAvailable(transformAbilityName(item.name)),\r\n                description: this._isDataAvailable(text)\r\n            }\r\n        })\r\n\r\n        return abilities;\r\n    }\r\n\r\n    getPokemonImage = data => {\r\n        return this._isDataAvailable(data.other?.['official-artwork']?.['front_default']);\r\n    }\r\n\r\n    getPokemonGender = async (data) => {\r\n        const genderUrls = [\r\n            'https://pokeapi.co/api/v2/gender/1',\r\n            'https://pokeapi.co/api/v2/gender/2',\r\n            'https://pokeapi.co/api/v2/gender/3'\r\n        ];\r\n\r\n        const pokemonGenderResponse = await Promise.all(genderUrls.map(url => fetch(url)));\r\n        const pokemonGenderResult = await Promise.all(pokemonGenderResponse.map(data => data.json()));\r\n\r\n        const gender = pokemonGenderResult.filter(genderData => {\r\n            return genderData['pokemon_species_details']?.find(genderItem => genderItem['pokemon_species']?.['name'] === data);\r\n        })\r\n\r\n        return gender.map(({ name }) => name);\r\n    }\r\n\r\n    getPokemonTypes = data => {\r\n        return data.map(({ type: { name } }) => name);\r\n    }\r\n\r\n    getFilteredTypes = async (type) => {\r\n        const typeResponse = await fetch(`https://pokeapi.co/api/v2/type/${type}`);\r\n        const { pokemon } = await typeResponse.json();\r\n\r\n        return pokemon.map(({ pokemon: { name } }) => ({ name }));\r\n    }\r\n\r\n    _isDataAvailable = data => {\r\n        return data ? data : 'No data'\r\n    }\r\n}","import { POKEMON_LIST_LOADING, POKEMON_LIST_SUCCESS, POKEMON_LIST_FAILURE, POKEMON_LIST_SEARCH, CLEAN_SEARCH } from './pokemonListTypes';\r\nimport PokemonService from '../../service/pokemonService';\r\n\r\nconst service = new PokemonService();\r\n\r\nconst getPokemonList = () => async dispatch => {\r\n    try {\r\n        dispatch({ type: POKEMON_LIST_LOADING });\r\n        \r\n        const pokemonList = await service.getAllPokemons();\r\n        dispatch({ type: POKEMON_LIST_SUCCESS, payload: pokemonList });\r\n    } catch {\r\n        dispatch({ type: POKEMON_LIST_FAILURE });\r\n    }\r\n}\r\n\r\nexport const searchPokemon = searchValue => ({ type: POKEMON_LIST_SEARCH, payload: searchValue });\r\nexport const cleanSearch = () => ({ type: CLEAN_SEARCH });\r\n\r\nexport default getPokemonList;","import Search from './Search';\r\nexport default Search;","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { searchPokemon } from '../../../redux/pokemonList/pokemonListActions';\r\nimport './Search.scss';\r\n\r\nconst Search = ({ sm }) => {\r\n    const search = useRef(null);\r\n    const dispatch = useDispatch();\r\n    const { pokemonListSearch } = useSelector(state => state.pokemonList);\r\n\r\n    useEffect(() => search.current.focus(), []);\r\n\r\n    return (\r\n        <div className={sm ? \"search search--sm\" : \"search\"}>\r\n            <input\r\n                ref={search}\r\n                type=\"search\"\r\n                value={pokemonListSearch}\r\n                onChange={(e) => dispatch(searchPokemon(e.target.value.toLocaleLowerCase()))}\r\n                placeholder=\"Search...\"\r\n                className=\"search__field\"\r\n            />\r\n            <Link to={{ pathname: `/${pokemonListSearch}` }} className=\"search__btn\" aria-label=\"search pokemon\">\r\n                <svg viewBox=\"0 0 64 64\"><g><g id=\"Icon-Search\" transform=\"translate(30.000000, 230.000000)\"><path className=\"st0\" d=\"M-2.3-182.9c-10.7,0-19.5-8.7-19.5-19.5c0-10.7,8.7-19.5,19.5-19.5s19.5,8.7,19.5,19.5     C17.1-191.6,8.4-182.9-2.3-182.9L-2.3-182.9z M-2.3-219c-9.2,0-16.7,7.5-16.7,16.7c0,9.2,7.5,16.7,16.7,16.7s16.7-7.5,16.7-16.7     C14.3-211.5,6.8-219-2.3-219L-2.3-219z\" id=\"Fill-1\" /><polyline className=\"st0\" id=\"Fill-2\" points=\"23.7,-174.2 10.1,-187.7 12.3,-189.9 25.8,-176.3 23.7,-174.2    \" /></g></g></svg>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;","import NavBurger from './NavBurger';\r\nexport default NavBurger;","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleMenu } from '../../redux/NavigationSm/NavigationSmActions';\r\nimport './NavBurger.scss';\r\n\r\nconst NavBurger = () => {\r\n    const burger = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => burger.current.focus());\r\n\r\n    return (\r\n        <button ref={burger} className=\"nav-burger\" aria-label=\"navigation\" onClick={() => dispatch(toggleMenu())}>\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default NavBurger;","import { HIDE_MENU, TOGGLE_MENU } from './NavigationSmTypes';\r\n\r\nexport const toggleMenu = () => ({ type: TOGGLE_MENU });\r\nexport const hideMenu = () => ({ type: HIDE_MENU });","import Navigation from './Navigation';\r\nexport default Navigation;","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Search from '../HomePage/Search';\r\nimport NavBurger from '../NavBurger';\r\nimport './Navigation.scss';\r\n\r\nconst Navigation = () => {\r\n    const { showMenu } = useSelector(state => state.navigationSm);\r\n\r\n    useEffect(() => {\r\n        if (showMenu) {\r\n            document.body.classList.add('menu-open')\r\n        } else {\r\n            document.body.classList.remove('menu-open')\r\n        }\r\n    }, [showMenu])\r\n\r\n    return (\r\n        <>\r\n            <NavBurger />\r\n            <nav className=\"nav\">\r\n                <Search sm />\r\n                <ul className=\"nav__list\">\r\n                    <li className=\"nav__item\">\r\n                        <NavLink className=\"nav__link link\" to={{ pathname: '/' }} exact>Home</NavLink>\r\n                    </li>\r\n                    <li className=\"nav__item\">\r\n                        <NavLink className=\"nav__link link\" to={{ pathname: '/additional' }}>Additional Page</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import { useEffect } from \"react\"\r\n\r\nconst useDocumentTitle = title => {\r\n    useEffect(() => document.title = title);\r\n}\r\n\r\nexport default useDocumentTitle;","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { hideMenu } from '../../redux/NavigationSm/NavigationSmActions';\r\n\r\nconst useNavigationSm = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (window.matchMedia('(max-width: 767.98px)').matches) {\r\n            dispatch(hideMenu());\r\n        }\r\n    }, [dispatch]);\r\n}\r\n\r\nexport default useNavigationSm;","import AdditionalPage from './AdditionalPage';\r\nexport default AdditionalPage;","import React from 'react';\r\nimport useDocumentTitle from '../customHooks/useDocumentTitle';\r\nimport useNavigationSm from '../customHooks/useNavigationSm';\r\n\r\nconst AdditionalPage = () => {\r\n    useNavigationSm();\r\n    useDocumentTitle('Additional Page');\r\n\r\n    return (\r\n        <section>\r\n            <h1>Additional Page Content</h1>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AdditionalPage;\r\n","import MainHeadline from './MainHeadline';\r\nexport default MainHeadline;\r\n","import React from 'react';\r\nimport './MainHeadline.scss';\r\n\r\nconst MainHeadline = ({ headline = 'Choose your pokemon!', home }) => (\r\n    <h1 className={home ? \"main-headline main-headline--home\" : \"main-headline main-headline--pokemon\"}>{headline}</h1>\r\n)\r\n\r\nexport default MainHeadline;","export default __webpack_public_path__ + \"static/media/5IPv.c8db92f6.gif\";","export default __webpack_public_path__ + \"static/media/5Q0v.e61d80e8.gif\";","import React, { useCallback, useEffect, useRef } from 'react';\r\nimport './Spinner.scss';\r\nimport Pokemon1 from './5IPv.gif';\r\nimport Pokemon2 from './5Q0v.gif';\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst Spinner = ({ sm }) => {\r\n    const spinner = useRef(null);\r\n\r\n    const setRandomSpinner = useCallback(() => {\r\n        const images = [Pokemon1, Pokemon2];\r\n\r\n        return images[getRandomInt(0, images.length - 1)]\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        spinner.current.src = setRandomSpinner();\r\n    }, [setRandomSpinner])\r\n\r\n    return (\r\n        <div className={sm ? \"spinner spinner--sm\" : \"spinner spinner--pokemon\"}>\r\n            <img className=\"spinner__img img\" alt=\"spinner\" ref={spinner} />\r\n            <p className=\"spinner__text\">loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import Spinner from './Spinner';\r\nexport default Spinner;","import PokemonList from './PokemonList';\r\nexport default PokemonList;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './PokemonList.scss';\r\n\r\nconst PokemonList = ({ pokemons, types }) => (\r\n    <ul className=\"pokemon-list\">\r\n        {\r\n            pokemons.map(({ name, image }) => (\r\n                <li key={name} className=\"pokemon-list__item\">\r\n                    <Link className=\"pokemon-list__link link\" to={`/${name}`}>\r\n                        <span className=\"pokemon-list__name\">{name}</span>\r\n                        {image === 'No data' || types ? null : <img className=\"pokemon-list__img img\" src={image} alt={name} />}\r\n                    </Link>\r\n                </li>\r\n            ))\r\n        }\r\n    </ul>\r\n)\r\n\r\nexport default PokemonList;","import React, { useEffect } from 'react';\r\nimport Spinner from '../../Spinner';\r\nimport PokemonList from '../../PokemonList';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport getPokemonList from '../../../redux/pokemonList/pokemonListActions';\r\n\r\nconst FilterFail = () => (\r\n    <p className=\"pokemon-list__failed\">Pokemons not found</p>\r\n)\r\n\r\nconst SearchList = () => {\r\n    const dispatch = useDispatch();\r\n    const { pokemonListLoading, pokemonListError, pokemonListSearch, pokemonListCache } = useSelector(state => state.pokemonList);\r\n    const pokemonList = useSelector(state => {\r\n        if (pokemonListSearch) {\r\n            return state.pokemonList.pokemonList.filter(item => item.name.includes(pokemonListSearch));\r\n        }\r\n\r\n        return state.pokemonList.pokemonList\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!pokemonListCache) {\r\n            if (window.matchMedia('(min-width: 768px)').matches) {\r\n                dispatch(getPokemonList());\r\n            }\r\n        }\r\n    }, [dispatch, pokemonListCache]);\r\n\r\n    if (pokemonListLoading) {\r\n        return <Spinner sm />\r\n    }\r\n\r\n    if (pokemonListError) {\r\n        return <p>Something goes wrong</p>\r\n    }\r\n\r\n    if (pokemonList.length === 0) {\r\n        return <FilterFail />\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-list\">\r\n            <PokemonList pokemons={pokemonList} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchList;","import SearchList from './SearchList';\r\nexport default SearchList;","import { POKEMON_CARDS_SUCCESS, POKEMON_CARDS_FAILURE, GET_MORE_CARDS } from './pokemonCardsTypes';\r\nimport PokemonService from '../../service/pokemonService';\r\n\r\nconst service = new PokemonService();\r\n\r\nconst getPokemonCards = (limit, offset) => async dispatch => {\r\n    try {\r\n        const pokemonCards = await service.getMorePokemons(limit, offset);\r\n        dispatch({ type: POKEMON_CARDS_SUCCESS, payload: pokemonCards });\r\n    } catch {\r\n        dispatch({ type: POKEMON_CARDS_FAILURE })\r\n    }\r\n}\r\n\r\nexport const getMoreCards = () => ({ type: GET_MORE_CARDS });\r\n\r\nexport default getPokemonCards;","import SpinnerSm from './SpinnerSm';\r\nexport default SpinnerSm;","import React from 'react';\r\nimport './SpinnerSm.scss';\r\n\r\nconst SpinnerSm = ({ show }) => {\r\n    let className = \"loadingio-spinner-spinner-6uc1nwdc91a\";\r\n\r\n    if (show) {\r\n        className += ' loading'\r\n    }\r\n\r\n    return (\r\n        <div className={className}><div className=\"ldio-qff3vccm6lj\">\r\n            <div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div>\r\n        </div></div>\r\n    )\r\n}\r\n\r\nexport default SpinnerSm;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getMoreCards } from '../../../redux/pokemonCards/pokemonCardsActions';\r\nimport SpinnerSm from '../../SpinnerSm';\r\nimport './LoadMoreButton.scss';\r\n\r\nconst LoadMoreButton = () => {\r\n    const dispatch = useDispatch();\r\n    const { loadMore: { status, offset, maxData } } = useSelector(state => state.pokemonCards);\r\n\r\n    return (\r\n        <button className={offset >= maxData ? \"load-more hide\" : \"load-more\"} onClick={() => dispatch(getMoreCards())}>\r\n            <span className=\"load-more__text\">Load more</span>\r\n            <SpinnerSm show={status || false} />\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default LoadMoreButton;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Card.scss';\r\n\r\nconst nodata = <span className=\"card__no-img\">Pokemon image not found</span>\r\n\r\nconst Card = ({ data }) => {\r\n    const { name, image } = data;\r\n\r\n    return (\r\n        <li className=\"card\">\r\n            <Link className=\"card__link link\" to={{ pathname: `/${name}` }}>\r\n                {image === 'No data' ? nodata : <img className=\"card__img img\" src={image} alt={name} />}\r\n                <span className=\"card__name\">{name}</span>\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Card;","import Card from './Card';\r\nexport default Card;","import PokemonCards from './PokemonCards';\r\nexport default PokemonCards;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadMoreButton from '../LoadMoreButton/LoadMoreButton';\r\nimport Card from '../Card';\r\nimport Spinner from '../../Spinner';\r\nimport getPokemonCards from '../../../redux/pokemonCards/pokemonCardsActions';\r\nimport './PokemonCards.scss';\r\n\r\nconst PokemonCards = () => {\r\n    const dispatch = useDispatch();\r\n    const { pokemonCards, pokemonCardsLoading, pokemonCardsError, pokemonCardsCache, loadMore: { offset, limit } } = useSelector(state => state.pokemonCards);\r\n\r\n    useEffect(() => {\r\n        if (!pokemonCardsCache) {\r\n            dispatch(getPokemonCards(limit, offset));\r\n        }\r\n    }, [pokemonCardsCache, dispatch, limit, offset]);\r\n\r\n    if (pokemonCardsLoading) {\r\n        return <Spinner sm />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className=\"pokemon-cards\">\r\n                {pokemonCards.map(data => {\r\n                    return <Card key={data.id} data={data} />\r\n                })}\r\n            </ul>\r\n            {pokemonCardsError && <p>Something goes wrong</p>}\r\n            <LoadMoreButton />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PokemonCards;","import HomePage from './HomePage';\r\nexport default HomePage;","import React from 'react';\r\nimport MainHeadline from '../MainHeadline';\r\nimport SearchList from './SearchList';\r\nimport Search from './Search';\r\nimport PokemonCards from './PokemonCards';\r\nimport './HomePage.scss';\r\nimport useNavigationSm from '../customHooks/useNavigationSm';\r\nimport useDocumentTitle from '../customHooks/useDocumentTitle';\r\n\r\nconst HomePage = () => {\r\n    useDocumentTitle(`Pokemon`);\r\n    useNavigationSm();\r\n\r\n    return (\r\n        <section className=\"home\">\r\n            <MainHeadline home />\r\n            <div className=\"home__aside\">\r\n                <Search />\r\n                <div className=\"home__search-result\">\r\n                    <SearchList />\r\n                </div>\r\n            </div>\r\n            <div className=\"home__cards\">\r\n                <PokemonCards />\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nconst Nodata = () => (\r\n    <li>No data</li>\r\n)\r\n\r\nconst useNoData = (data, Component) => {\r\n    return data.length === 0 ? <Nodata/> : Component;\r\n}\r\n\r\nexport default useNoData;","import React from 'react';\r\nimport Chart from \"react-apexcharts\";\r\nimport useNoData from '../../customHooks/useNoData';\r\nimport './Stats.scss';\r\n\r\nconst setChart = (data) => {\r\n    const labels = [];\r\n    const stats = [];\r\n\r\n    data.forEach(item => {\r\n        labels.push(...Object.keys(item));\r\n        stats.push(...Object.values(item));\r\n    })\r\n\r\n    const chartOptions = {\r\n        options: {\r\n            labels,\r\n            noData: {\r\n                text: \"Loading...\"\r\n            },\r\n            plotOptions: {\r\n                bar: {horizontal: true}\r\n            },\r\n        },\r\n        series: [{\r\n            name: \"stat\",\r\n            data: stats\r\n        }]\r\n    }\r\n\r\n    return <Chart type=\"bar\" width=\"100%\" options={chartOptions.options} series={chartOptions.series}/>\r\n}\r\n\r\nconst Stats = ({ data = [] }) => (\r\n    <div className=\"stats\">\r\n        <h3 className=\"stats__headline pokemon__details-headline\">Stats</h3>\r\n        {useNoData(data, setChart(data))}\r\n    </div>\r\n)\r\n\r\nexport default Stats;\r\n","import Stats from './Stats';\r\nexport default Stats;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport useNoData from '../../customHooks/useNoData';\r\nimport './Evolution.scss';\r\n\r\nconst View = ({ data }) => (\r\n    data.map(({ id, name, image }) => (\r\n        <li key={id} className=\"evolution__item\">\r\n            <Link to={`/${name}`} className=\"evolution__link link\">\r\n                <img className=\"img evolution__img\" src={image} alt={name} />\r\n                <span className=\"evolution__name\">{name}</span>\r\n            </Link>\r\n        </li>\r\n    ))\r\n)\r\n\r\nconst Evolution = ({ data = [] }) => (\r\n    <div className=\"evolution\">\r\n        <h3 className=\"evolution__headline pokemon__details-headline\">Evolution</h3>\r\n        {data.length > 1 || data.length === 0 ? null : <p className=\"evolution__fail\">This pokemon does not evolve</p>}\r\n        <ul className=\"evolution__list\">\r\n            {useNoData(data, <View data={data}/>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Evolution;","import Evolution from './Evolution';\r\nexport default Evolution;","import Description from './Description';\r\nexport default Description;","import React from 'react';\r\nimport './Description.scss';\r\n\r\nconst Description = ({ data }) => (\r\n    <p className=\"description pokemon__description\">{data}</p>\r\n)\r\n\r\nexport default Description;","import Weight from './Weight';\r\nexport default Weight;","import React from 'react';\r\nimport './Weight.scss';\r\n\r\nconst Weight = ({ data }) => (\r\n    <div className=\"weight pokemon__info\">\r\n        <h3 className=\"weight__headline pokemon__details-headline\">Weight</h3>\r\n        <span className=\"weight__info\">{data} kg</span>\r\n    </div>\r\n)\r\n\r\nexport default Weight;","import Height from './Height';\r\nexport default Height;","import React from 'react';\r\nimport './Height.scss';\r\n\r\nconst Height = ({ data }) => (\r\n    <div className=\"height pokemon__info\">\r\n        <h3 className=\"height__headline pokemon__details-headline\">Height:</h3>\r\n        <span className=\"height__info\">{data} m</span>\r\n    </div>\r\n)\r\n\r\nexport default Height;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport './Gender.scss';\r\n\r\nconst female = '♀';\r\nconst male = '♂';\r\nconst genderless = 'unknown';\r\n\r\nconst View = ({ data }) => (\r\n    data.map((item, index) => (\r\n        <li className=\"gender__item\" key={index}>\r\n            {\r\n                item === 'male' ? male :\r\n                item === 'female' ? female :\r\n                genderless\r\n            }\r\n        </li>\r\n    ))\r\n)\r\n\r\nconst Gender = ({ data = [] }) => {\r\n    return (\r\n        <div className=\"gender pokemon__info\">\r\n            <h3 className=\"gender__headline pokemon__details-headline\">Gender</h3>\r\n            <ul className=\"gender__list\">\r\n                {useNoData(data, <View data={data}/>)}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gender;","import Gender from './Gender';\r\nexport default Gender;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport './Abilities.scss';\r\n\r\nconst View = ({ data }) => (\r\n    data.map((item, index) => (\r\n        <li className=\"abilities__item\" key={index}>{item.name}</li>\r\n    ))\r\n)\r\n\r\nconst Abilities = ({ data = [] }) => (\r\n    <div className=\"abilities pokemon__info\">\r\n        <h3 className=\"abilities__headline pokemon__details-headline\">Abilities</h3>\r\n        <ul className=\"abilities__list\">\r\n            {useNoData(data, <View data={data}/>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Abilities;","import Abilities from './Abilities';\r\nexport default Abilities;","import Category from './Category';\r\nexport default Category;","import React from 'react';\r\nimport './Category.scss';\r\n\r\nconst Category = ({ data }) => (\r\n    <div className=\"category pokemon__info\">\r\n        <h3 className=\"category__headline pokemon__details-headline\">Category:</h3>\r\n        <span className=\"category__info\">{data}</span>\r\n    </div>\r\n)\r\n\r\nexport default Category;","import Habitat from './Habitat';\r\nexport default Habitat;","import React from 'react';\r\nimport './Habitat.scss';\r\n\r\nconst Habitat = ({ data }) => (\r\n    <div className=\"habitat pokemon__info\">\r\n        <h3 className=\"habitat__headline pokemon__details-headline\">Habitat</h3>\r\n        <span className=\"habitat__info\">{data}</span>\r\n    </div>\r\n)\r\n\r\nexport default Habitat;","import DetailMain from './Detail-main';\r\nexport default DetailMain;","import React from 'react';\r\nimport Description from './Description';\r\nimport Weight from './Weight';\r\nimport Height from './Height';\r\nimport Gender from './Gender';\r\nimport Abilities from './Abilities';\r\nimport Category from './Category';\r\nimport Habitat from './Habitat';\r\n\r\nconst DetailMain = ({ data: { description, weight, height, gender, abilities, category, habitat } }) => (\r\n    <>\r\n        <Description data={description} />\r\n        <Weight data={weight} />\r\n        <Height data={height} />\r\n        <Gender data={gender} />\r\n        <Abilities data={abilities} />\r\n        <Category data={category} />\r\n        <Habitat data={habitat} />\r\n    </>\r\n)\r\n\r\nexport default DetailMain;","import TypeItem from './TypeItem';\r\nexport default TypeItem;","import React from 'react';\r\nimport { useRouteMatch, Link } from 'react-router-dom';\r\nimport './TypeItem.scss';\r\n\r\nconst TypeItem = ({ data }) => {\r\n    const { url } = useRouteMatch();\r\n\r\n    return (\r\n        data.map((item, index) => (\r\n            <li className=\"type-item\" key={index}>\r\n                <Link className=\"type-item__link link\" to={`${url}?type=${item}`}>{item}</Link>\r\n            </li>\r\n        ))\r\n    )\r\n}\r\n\r\nexport default TypeItem;","import Weaknesses from './Weaknesses';\r\nexport default Weaknesses;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport TypeItem from '../TypeItem';\r\n\r\nconst Weaknesses = ({ data = [] }) => (\r\n    <div>\r\n        <h3 className=\"pokemon__type-headline\">Weaknesses</h3>\r\n        <ul className=\"pokemon__type-list\">\r\n            {useNoData(data, <TypeItem data={data}/>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Weaknesses;","import Strengths from './Strengths';\r\nexport default Strengths;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport TypeItem from '../TypeItem';\r\n\r\nconst Strengths = ({ data = [] }) => (\r\n    <div>\r\n        <h3 className=\"pokemon__type-headline\">Strengths</h3>\r\n        <ul className=\"pokemon__type-list\">\r\n            {useNoData(data, <TypeItem data={data}/>)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Strengths;","import Type from './Type';\r\nexport default Type;","import React from 'react';\r\nimport useNoData from '../../../customHooks/useNoData';\r\nimport TypeItem from '../TypeItem';\r\n\r\nconst Type = ({ data = [] }) => (\r\n    <div>\r\n        <h3 className=\"pokemon__type-headline\">Type</h3>\r\n        <ul className=\"pokemon__type-list\">\r\n            {useNoData(data, <TypeItem data={data} />)}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default Type;","import { TYPE_FILTERED_LIST_LOADING, TYPE_FILTERED_LIST_SUCCESS, TYPE_FILTERED_LIST_FAILURE } from './typeFilteredListTypes';\r\nimport PokemonService from '../../service/pokemonService';\r\n\r\nconst service = new PokemonService();\r\n\r\nconst getTypeFilteredList = (type) => async dispatch => {\r\n    try {\r\n        dispatch({ type: TYPE_FILTERED_LIST_LOADING });\r\n\r\n        const typeFilteredList = await service.getFilteredTypes(type);\r\n        dispatch({ type: TYPE_FILTERED_LIST_SUCCESS, payload: typeFilteredList })\r\n    } catch {\r\n        dispatch({ type: TYPE_FILTERED_LIST_FAILURE })\r\n    }\r\n}\r\n\r\nexport default getTypeFilteredList;","import FilteredTypes from './FilteredTypes';\r\nexport default FilteredTypes;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport getTypeFilteredList from '../../../../redux/typeFilteredList/typeFilteredListActions';\r\nimport PokemonList from '../../../PokemonList/';\r\nimport Spinner from '../../../Spinner';\r\nimport './FilteredTypes.scss';\r\n\r\nconst FilteredTypes = ({ type }) => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const { typeFilteredList, typeFilteredListLoading, typeFilteredListError } = useSelector(state => state.typeFilteredList);\r\n\r\n    useEffect(() =>  dispatch(getTypeFilteredList(type)), [dispatch, type]);\r\n\r\n    if (typeFilteredListError) {\r\n        return (\r\n            <div className=\"type-filter-fail\">\r\n                <p className=\"type-filter-fail__text\">Wrong pokemon type</p>\r\n                <Link className=\"type-filter-fail__button\" to={`/${id}`}>back</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    if (typeFilteredListLoading) {\r\n        return <Spinner sm />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className=\"type-filter-close link\" to={`/${id}`}>\r\n                <span className=\"name\">{type}</span>\r\n                <span className=\"icon\">&times;</span>\r\n            </Link>\r\n            <div className=\"filtered-types\">\r\n                <PokemonList pokemons={typeFilteredList} types />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilteredTypes;","import DetailTypes from './Detail-types';\r\nexport default DetailTypes;","import React from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Weaknesses from './Weaknesses';\r\nimport Strengths from './Strengths';\r\nimport Type from './Type';\r\nimport FilteredTypes from './FilteredTypes';\r\n\r\nconst DetailTypes = ({ data: { types, weaknesses, strengths } }) => {\r\n    const { search } = useLocation();\r\n    const type = new URLSearchParams(search).get('type');\r\n\r\n    if (type) {\r\n        return <FilteredTypes type={type}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Type data={types} />\r\n            <Weaknesses data={weaknesses} />\r\n            <Strengths data={strengths} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailTypes;","import NonExistentPage from './404';\r\nexport default NonExistentPage;","import React, { useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './404.scss';\r\n\r\nconst NonExistentPage = () => {\r\n    const backButton = useRef(null);\r\n    const { goBack } = useHistory();\r\n\r\n    useEffect(() => backButton.current.focus(), []);\r\n\r\n    return (\r\n        <div className=\"non-existent-page\">\r\n            <div className=\"non-existent-page__text\">\r\n                <h1>404</h1>\r\n                <p>page not found</p>\r\n                <button className=\"non-existent-page__back\" ref={backButton} onClick={goBack}>Go back</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NonExistentPage;","import { POKEMON_PAGE_LOADING, POKEMON_PAGE_SUCCESS, POKEMON_PAGE_FAILURE } from './pokemonPageTypes';\r\nimport PokemonService from '../../service/pokemonService';\r\n\r\nconst service = new PokemonService();\r\n\r\nconst getPokemonPage = (id) => async dispatch => {\r\n    try {\r\n        dispatch({ type: POKEMON_PAGE_LOADING });\r\n\r\n        const pokemonPage = await service.getCurrentPokemon(id);\r\n        dispatch({ type: POKEMON_PAGE_SUCCESS, payload: pokemonPage })\r\n    } catch {\r\n        dispatch({ type: POKEMON_PAGE_FAILURE })\r\n    }\r\n}\r\n\r\nexport default getPokemonPage;","import PokemonPage from './PokemonPage';\r\nexport default PokemonPage;","import React, { useEffect } from 'react';\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MainHeadline from '../MainHeadline';\r\nimport Stats from './Stats';\r\nimport Evolution from './Evolution';\r\nimport DetailMain from './Detail-main';\r\nimport DetailTypes from './Detail-types';\r\nimport Spinner from '../Spinner';\r\nimport NonExistentPage from '../404';\r\nimport getPokemonPage from '../../redux/pokemonPage/pokemonPageActions';\r\nimport useNavigationSm from '../customHooks/useNavigationSm';\r\nimport { cleanSearch } from '../../redux/pokemonList/pokemonListActions';\r\nimport useDocumentTitle from '../customHooks/useDocumentTitle';\r\nimport './PokemonPage.scss';\r\n\r\nconst PokemonPage = () => {\r\n    const { id } = useParams();\r\n    const dispatch = useDispatch();\r\n    const { pokemonPage, pokemonPageLoading, pokemonPageError } = useSelector(state => state.pokemonPage);\r\n    \r\n    useNavigationSm();\r\n    useDocumentTitle(\r\n        pokemonPageError ? '404 - Page does not exists' : `Pokemon - ${id[0].toUpperCase()}${id.slice(1)}`\r\n    );\r\n    useEffect(() => dispatch(cleanSearch()), [dispatch]); \r\n    useEffect(() => dispatch(getPokemonPage(id)), [dispatch, id]);    \r\n\r\n    if (pokemonPageError) {\r\n        return <NonExistentPage />\r\n    }\r\n\r\n    if (pokemonPageLoading) {\r\n        return <Spinner />\r\n    }\r\n\r\n    return (\r\n        <section className=\"pokemon\">\r\n            <MainHeadline headline={pokemonPage.name} />\r\n            <div className=\"pokemon__image\">\r\n                <img className=\"img\" src={pokemonPage.image} alt={pokemonPage.name} />\r\n            </div>\r\n            <div className=\"pokemon__details pokemon__details--main\">\r\n                <DetailMain data={pokemonPage} />\r\n            </div>\r\n            <div className=\"pokemon__details pokemon__details--type\">\r\n                <DetailTypes data={pokemonPage} />\r\n            </div>\r\n            <div className=\"pokemon__details pokemon__details--stats\">\r\n                <Stats data={pokemonPage.stats} />\r\n            </div>\r\n            <div className=\"pokemon__details pokemon__details--evolution\">\r\n                <Evolution data={pokemonPage.evolution} />\r\n            </div>\r\n            <Link to={{ pathname: '/' }} className=\"pokemon__go-home link\">Discover more pokemons</Link>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default PokemonPage;","import App from './App';\r\nexport default App;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Navigation from '../Navigation';\r\nimport AdditionalPage from '../AdditionalPage';\r\nimport HomePage from '../HomePage';\r\nimport PokemonPage from '../PokemonPage';\r\nimport './App.scss';\r\n\r\nconst App = () => (\r\n    <>\r\n        <header className=\"header\">\r\n            <div className=\"container\">\r\n                <Route component={Navigation} path=\"/\" />\r\n            </div>\r\n        </header>\r\n        <main className=\"main\">\r\n            <div className=\"container\">\r\n                <Switch>\r\n                    <Route component={HomePage} path=\"/\" exact />\r\n                    <Route component={AdditionalPage} path=\"/additional\" />\r\n                    <Route component={PokemonPage} path=\"/:id\" />\r\n                </Switch>\r\n            </div>\r\n        </main>\r\n    </>\r\n)\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport store from './redux/store';\r\nimport ErrorBoundry from './components/ErrorBoundary';\r\nimport App from './components/App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ErrorBoundry>\r\n        <Router>\r\n          <App />\r\n        </Router>\r\n      </ErrorBoundry>\r\n    </Provider>,\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}